# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: quickcheck
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/quickcheck?serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: abc
    networks:
        - spring-boot-mysql-network

  # Frontend Service 
  app-client:
    build:
      context: quickcheck-front
      dockerfile: Dockerfile
    ports:
      - "9090:80" # Forward the exposed port 80 on the container to port 80 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
        - spring-boot-mysql-network

  # Database Service (Mysql)
  db:
    image: mysql/mysql-server:8.0
    ports:
      - "3306:3306"
    restart: always
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    expose:
      # Opens port 3306 on the container
      - '3306'
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=quickcheck
      - MYSQL_ROOT_PASSWORD=abc
    networks:
        - spring-boot-mysql-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    networks:
        - spring-boot-mysql-network

# Networks to be created to facilitate communication between containers
networks:
    spring-boot-mysql-network:
        driver: bridge
